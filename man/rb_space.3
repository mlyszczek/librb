.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "RB_SPACE" "3" "Sep 09, 2025" "" "librb"
.SH NAME
.sp
\fI\%rb_count(3)\fP, \fI\%rb_space(3)\fP, \fI\%rb_peek_size(3)\fP \- get information about space available
in ring buffer.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.EX
#include <rb.h>

long rb_count(struct rb *rb);
long rb_space(struct rb *rb);
long rb_peek_size(struct rb *rb);
.EE
.UNINDENT
.UNINDENT
.SH RETURN VALUE
.sp
\fI\%rb_count(3)\fP returns number of elements that are currently on the ring buffer.
Tells you how much space is taken.
.sp
\fI\%rb_space(3)\fP return number of elements that can be copied to ring buffer.
Tells you how much space is left on ring buffer.
.sp
\fI\%rb_peek_size(3)\fP return size (in bytes) of next frame that \fI\%rb_read(3)\fP will return.
This only applies if \fIrb\fP was created with \fIrb_dynamic\fP flag.
.SH ERROR
.INDENT 0.0
.TP
.B EINVAL
Passed \fIrb\fP is invalid
.UNINDENT
.SH EXAMPLE
.sp
Check used and free space on ring buffer
.INDENT 0.0
.INDENT 3.5
.sp
.EX
long space, count;
struct rb *rb;

rb = rb_new(8, 1, 0);
space = rb_space(rb); /* will return 7 */
count = rb_count(rb); /* will return 0 */

rb_write(rb, buf, 4); /* write 4 bytes to rb */
space = rb_space(rb); /* will return 3 */
count = rb_count(rb); /* will return 4 */

rb_write(rb, buf, 3); /* write 3 bytes to rb */
space = rb_space(rb); /* will return 0 */
count = rb_count(rb); /* will return 7 */
.EE
.UNINDENT
.UNINDENT
.sp
Check size of next frame on ring buffer
.INDENT 0.0
.INDENT 3.5
.sp
.EX
const char *s = \(dq12345\(dq;
rb_write(rb, s, strlen(s));
size = rb_peek_size(rb); /* will return 5 */
.EE
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
\fI\%rb_new(3)\fP, \fI\%rb_init(3)\fP, \fI\%rb_destroy(3)\fP, \fI\%rb_cleanup(3)\fP, \fI\%rb_write(3)\fP, \fI\%rb_send(3)\fP,
\fI\%rb_read(3)\fP, \fI\%rb_recv(3)\fP, \fI\%rb_read_claim(3)\fP, \fI\%rb_read_commit(3)\fP, \fI\%rb_write_claim(3)\fP,
\fI\%rb_write_commit(3)\fP, \fI\%rb_clear(3)\fP, \fI\%rb_discard(3)\fP, \fI\%rb_count(3)\fP, \fI\%rb_space(3)\fP,
\fI\%rb_stop(3)\fP, \fI\%rb_peek_size(3)\fP, \fI\%rb_set_hard_max_count(3)\fP
.SH AUTHOR
Michał Łyszczek <michal.lyszczek@bofc.pl>
.SH COPYRIGHT
2025, Michał Łyszczek
.\" Generated by docutils manpage writer.
.
