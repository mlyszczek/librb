.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "RB_SET_HARD_MAX_COUNT" "3" "Oct 31, 2025" "" "librb"
.SH NAME
.sp
\fI\%rb_new(3)\fP, \fI\%rb_init(3)\fP \- initialize new ring buffer
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.EX
#include <rb.h>

int rb_set_hard_max_count(struct rb *rb, size_t count);
.EE
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fI\%rb_set_hard_max_count(3)\fP will set a hard limit for growing \fIrb\fP\&. If \fIrb\fP has
not been created with \fIrb_growable\fP this function does nothing.
.sp
After init there is no limit how big \fIrb\fP can get. If you keep putting data
on \fIrb\fP, it will grow memory until memory is exhausted. You can limit the
grow with this function. Once limit is hit, function will fall back into
non\-growable mode. \fIcount\fP must be power of 2 number just like when passing
to \fI\%rb_new(3)\fP\&.
.SH RETURN VALUE
.sp
Function will return 0 on success or \-1 on errors.
.SH ERROR
.INDENT 0.0
.TP
.B EINVAL
\fIcount\fP is not a power of 2 number, or \fIrb\fP is NULL.
.UNINDENT
.SH EXAMPLE
.INDENT 0.0
.INDENT 3.5
.sp
.EX
struct rb *rb = rb_new(4, 1, rb_growable);
rb_set_hard_max_count(rb, 8);
rb_write(rb, buf, 7); /* rb will grow */
rb_write(rb, buf, 7); /* won\(aqt grow anymore, EAGAIN return */

rb_set_hard_max_count(rb, 16);
rb_write(rb, buf, 7); /* rb can grow again */
.EE
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
\fI\%rb_new(3)\fP, \fI\%rb_init(3)\fP, \fI\%rb_destroy(3)\fP, \fI\%rb_cleanup(3)\fP, \fI\%rb_write(3)\fP, \fI\%rb_send(3)\fP,
\fI\%rb_writev(3)\fP, \fI\%rb_sendv(3)\fP, \fI\%rb_read(3)\fP, \fI\%rb_recv(3)\fP, \fI\%rb_readv(3)\fP, \fI\%rb_recvv(3)\fP,
\fI\%rb_read_claim(3)\fP, \fI\%rb_read_commit(3)\fP, \fI\%rb_write_claim(3)\fP, \fI\%rb_write_commit(3)\fP,
\fI\%rb_clear(3)\fP, \fI\%rb_discard(3)\fP, \fI\%rb_count(3)\fP, \fI\%rb_space(3)\fP, \fI\%rb_stop(3)\fP,
\fI\%rb_peek_size(3)\fP, \fI\%rb_set_hard_max_count(3)\fP
.SH AUTHOR
Michał Łyszczek <michal.lyszczek@bofc.pl>
.SH COPYRIGHT
2025, Michał Łyszczek
.\" Generated by docutils manpage writer.
.
